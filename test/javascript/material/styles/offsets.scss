// Copyright 2017 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

@use "sass:list";
@use "sass:map";
@use "sass:string";
@use "material/styles/variables";
@use "material/styles/components/grid/mixins";

$direction-types: top, bottom, left, right;
$display-types: block, flex, none;
$properties: margin, padding;

@mixin margin-pad-display($size: null) {
  $append: if($size, -#{$size}, null);
  @each $property in $properties {
    $class: #{string.slice($property, 1, 1)};
    @for $rem from 0 through 4 {
      .#{$class} {
        &-#{$rem} {
          @at-root &#{$append} {
            #{$property}: #{$rem}rem;
          }
          @at-root &-force#{$append} {
            #{$property}: #{$rem}rem !important;
          }
          @at-root &-em {
            @at-root &#{$append} {
              #{$property}: #{$rem}em;
            }
            @at-root &-force#{$append} {
              #{$property}: #{$rem}em !important;
            }
          }
        }

        @at-root &-#{$rem * 25}-vh {
          @at-root &#{$append} {
            #{$property}: #{$rem * 25}vh;
          }
          @at-root &-force#{$append} {
            #{$property}: #{$rem * 25}vh !important;
          }
        }
      }

      @each $type in $direction-types {
        $d: string.slice($type, 1, 1);
        @at-root .#{$class}#{$d} {
          &-#{$rem} {
            @at-root &#{$append} {
              #{$property}-#{$type}: #{$rem}rem;
            }
            @at-root &-force#{$append} {
              #{$property}-#{$type}: #{$rem}rem !important;
            }
            @at-root &-em {
              @at-root &#{$append} {
                #{$property}-#{$type}: #{$rem}em;
              }
              @at-root &-force#{$append} {
                #{$property}-#{$type}: #{$rem}em !important;
              }
            }
          }

          @at-root &-#{$rem * 25}-vh {
            @at-root &#{$append} {
              #{$property}-#{$type}: #{$rem * 25}vh;
            }
            @at-root &-force#{$append} {
              #{$property}-#{$type}: #{$rem * 25}vh !important;
            }
          }
        }
      }
    }
  }

  @each $type in $display-types {
    @at-root .d-#{$type} {
      @at-root &#{$append} {
        display: $type;
      }
      @at-root &-force#{$append} {
        display: $type !important;
      }
    }
  }
}

@include margin-pad-display;

@each $size in map.keys(variables.$columns) {
  @include mixins.media-query_($size) {
    @include margin-pad-display($size)
  }
}
